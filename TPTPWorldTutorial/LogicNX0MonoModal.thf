% SZS status Success for LogicNX0MonoModal.p
%%% This output was generated by embedproblem, version 1.8.5 (library version 1.8).
%%% Generated on Fri May 30 15:05:02 UTC 2025
%%% using '$modal' embedding, version 2.2.2.
%%% Logic specification used:
%%% tff(semantics, logic, ($alethic_modal) == ([($domains) == ($constant),($designation) == ($rigid),($terms) == ($global),($modalities) == ($modal_system_M)])).
%%% Transformation parameters: FORCE_HIGHERORDER

% SZS output start ListOfTHF for LogicNX0MonoModal.p
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% User types %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
thf(person_type, type, person: $tType).
thf(product_type, type, product: $tType).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Meta-logical definitions of the embedding %%
thf(mworld_type, type, mworld: $tType).
thf(mrel_decl, type, mrel: (mworld > (mworld > $o))).
thf(mbox_decl, type, mbox: ((mworld > $o) > (mworld > $o))).
thf(mbox_def, definition, (mbox = (^ [Phi:(mworld > $o),W:mworld]: ((! [V:mworld]: ((((mrel @ W) @ V) => (Phi @ V)))))))).
thf(mdia_decl, type, mdia: ((mworld > $o) > (mworld > $o))).
thf(mdia_def, definition, (mdia = (^ [Phi:(mworld > $o),W:mworld]: ((? [V:mworld]: ((((mrel @ W) @ V) & (Phi @ V)))))))).
thf(mrel_reflexive, axiom, (! [W:mworld]: (((mrel @ W) @ W)))).
thf(mactual_decl, type, mactual: mworld).
thf(mlocal_decl, type, mlocal: ((mworld > $o) > $o)).
thf(mlocal_def, definition, (mlocal = (^ [Phi:(mworld > $o)]: ((Phi @ mactual))))).
thf(mglobal_decl, type, mglobal: ((mworld > $o) > $o)).
thf(mglobal_def, definition, (mglobal = (^ [Phi:(mworld > $o)]: ((! [W:mworld]: ((Phi @ W))))))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted user type declarations %%%%%%%%%%%
thf(alex_decl, type, alex: person).
thf(leo_decl, type, leo: product).
thf(advisor_of_decl, type, advisor_of: (person > person)).
thf(work_hard_decl, type, work_hard: (mworld > (person > (product > $o)))).
thf(gets_rich_decl, type, gets_rich: (mworld > (person > $o))).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Converted problem %%%%%%%%%%%%%%%%%%%%%%%%%%
thf(work_hard_to_get_rich, axiom, (mglobal @ (^ [W:mworld]: ((! [P:person]: (((^ [W:mworld]: ((((^ [W:mworld]: ((? [R:product]: (((^ [W:mworld]: ((((^ [W:mworld]: (((work_hard @ W) @ ((^ [W:mworld]: (P)) @ W)))) @ W) @ ((^ [W:mworld]: (R)) @ W)))) @ W))))) @ W) => ((mdia @ (^ [W:mworld]: (((gets_rich @ W) @ ((^ [W:mworld]: (P)) @ W))))) @ W)))) @ W))))))).
thf(not_all_get_rich, axiom, (mglobal @ (^ [W:mworld]: ((~ (((^ [W:mworld]: ((? [P:person]: (((mbox @ (^ [W:mworld]: (((gets_rich @ W) @ ((^ [W:mworld]: (P)) @ W))))) @ W))))) @ W))))))).
thf(one_rich, axiom, (mglobal @ (^ [W:mworld]: ((! [P:person]: ((! [O:person]: (((^ [W:mworld]: ((((^ [W:mworld]: ((((^ [W:mworld]: (((gets_rich @ W) @ ((^ [W:mworld]: (P)) @ W)))) @ W) & ((^ [W:mworld]: ((((^ [W:mworld]: (O)) @ W) != ((^ [W:mworld]: (P)) @ W)))) @ W)))) @ W) => ((mbox @ (^ [W:mworld]: ((~ (((^ [W:mworld]: (((gets_rich @ W) @ ((^ [W:mworld]: (O)) @ W)))) @ W)))))) @ W)))) @ W))))))))).
thf(alex_works_on_leo_here, axiom, (mlocal @ (^ [W:mworld]: ((((^ [W:mworld]: (((work_hard @ W) @ ((^ [W:mworld]: (alex)) @ W)))) @ W) @ ((^ [W:mworld]: (leo)) @ W)))))).
thf(alex_advisor_works_on_leo_here, axiom, (mlocal @ (^ [W:mworld]: ((((^ [W:mworld]: (((work_hard @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (advisor_of)) @ W) @ ((^ [W:mworld]: (alex)) @ W)))) @ W)))) @ W) @ ((^ [W:mworld]: (leo)) @ W)))))).
thf(no_self_advising, axiom, (mglobal @ (^ [W:mworld]: ((! [P:person]: (((^ [W:mworld]: ((((^ [W:mworld]: (P)) @ W) != ((^ [W:mworld]: ((((^ [W:mworld]: (advisor_of)) @ W) @ ((^ [W:mworld]: (P)) @ W)))) @ W)))) @ W))))))).
% tff(someone_gets_rich_but_not_advisor,conjecture,
%     ? [P: person] :
%       ( {$possible}
%       @ ( gets_rich(P)
%         & ~ gets_rich(advisor_of(P)) ) ) ).
thf(someone_gets_rich_but_not_advisor, conjecture, (mlocal @ (^ [W:mworld]: ((? [P:person]: (((^ [W:mworld]: ((? [F:(person > person)]: (((^ [W:mworld]: ((((mdia @ (^ [W:mworld]: (((gets_rich @ W) @ ((^ [W:mworld]: (P)) @ W))))) @ W) & ((^ [W:mworld]: ((~ (((^ [W:mworld]: (((gets_rich @ W) @ ((^ [W:mworld]: ((((^ [W:mworld]: (F)) @ W) @ ((^ [W:mworld]: (P)) @ W)))) @ W)))) @ W))))) @ W)))) @ W))))) @ W))))))).
% SZS output end ListOfTHF for LogicNX0MonoModal.p
